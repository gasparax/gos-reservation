openapi: 3.0.1
info:
  title: Reservation Service API
  description: Reservation from GoOutSafe with Microservices
  version: "0.1"
servers:
- url: /

paths:

  /reservation/restaurant/{restaurant_id}:
    get:
      tags:
      - Reservation
      summary: Get all reservation for a restaurant
      operationId: gooutsafe.resources.reservation.get_all_reservation_restaurant
      parameters:
      - name: restaurant_id
        in: path
        description: Restaurant's Unique identifier
        required: true
        schema:
          type: integer      
      responses:
        200:
          description: Return all reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /reservation/customer/{customer_id}:
    get:
      tags:
      - Reservation
      summary: Get all reservation for a customer
      operationId: gooutsafe.resources.reservation.get_all_reservation_customer
      parameters:
      - name: customer_id
        in: path
        description: Customer's Unique identifier
        required: true
        schema:
          type: integer      
      responses:
        200:
          description: Return all reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  
  /reservation/:
    post:
      tags:
      - Reservation
      summary: Create a new reservation
      operationId: gooutsafe.resources.reservation.create_reservation           
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  restaurant_id:
                    type: integer
                  start_time:
                    type: string
                  people_number:
                    type: integer
                  tables:
                    description: List of the restaurant's tables
                    type: array
                    items:
                      $ref: '#/components/schemas/Table'
                  times:
                    description: The restaurant opening hours
                    type: array
                    items:
                      $ref: '#/components/schemas/RestaurantAvailability'
                required:
                  - user_id
                  - start_time
                  - people_number
                  - tables
                  - times
      responses:
        200:
          description: Reservation successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the data validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'


  /reservation/{reservation_id}:

    get:
      tags:
      - Reservation
      summary: Get reservation by id
      operationId: gooutsafe.resources.reservation.get_reservation
      parameters:
      - name: reservation_id
        in: path
        description: Reservation's Unique identifier
        required: true
        schema:
          type: integer      
      responses:
        200:
          description: Return a reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    
    put:
      tags:
      - Reservation
      summary: Edit a reservation
      operationId: gooutsafe.resources.reservation.edit_reservation
      parameters:
      - name: reservation_id
        in: path
        description: Reservation's unique identifier
        required: true
        schema:
          type: integer   
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_time:
                    type: string
                  people_number:
                    type: integer
                  tables:
                    description: List of the restaurant's tables
                    type: array
                    items:
                      $ref: '#/components/schemas/Table'
                  times:
                    description: The restaurant opening hours
                    type: array
                    items:
                      $ref: '#/components/schemas/RestaurantAvailability'
                required:
                  - start_time
                  - people_number
                  - tables
                  - times
      responses:
        200:
          description: Reservation successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the data validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    
    delete:
      tags:
      - Reservation
      summary: Delete a reservation
      operationId: gooutsafe.resources.reservation.delete_reservation
      parameters:
      - name: reservation_id
        in: path
        description: Reservation's unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Reservation successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the data validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  
  /reservation/dates/:
    post:
      tags:
      - Reservation
      summary: Retrieve reservations fitering by dates
      operationId: gooutsafe.resources.reservation.filtered_reservations           
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_time:
                    type: string
                  end_time:
                    type: string
                required:
                  - start_time
                  - end_time
      responses:
        200:
          description: Reservations successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the reservations retrieving
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /reservation/confirm/{reservation_id}:
    put:
      tags:
      - Reservation
      summary: Confirm a reservation
      operationId: gooutsafe.resources.reservation.confirm_reservation
      parameters:
      - name: reservation_id
        in: path
        description: Reservation's unique identifier
        required: true
        schema:
          type: integer   
      responses:
        200:
          description: Reservation successfully confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Error in the confirmation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    Reservation:
      required:
      - id
      - user_id
      - table_id
      - restaurant_id
      - people_number
      - timestamp
      - start_time
      - end_time 
      - is_confirmed
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 1
        user_id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 3
        table_id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 1
        restaurant_id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 2          
        people_number:
          type: integer
          description: Person number
          example: 4
        timestamp:
          minLength: 1
          type: string
          description: Timestamp of the reservation, is setted automatically
          example: "2020-11-06 19:54:15.476008"
        start_time:
          minLength: 1
          type: string
          description: Start_time of the reservation
          example: "2020-11-06 20:00"
        end_time:
          minLength: 1
          type: string
          description: End_time of the reservation, is setted automatically. Is summed the start_time with the avg stay time of the restaurant
          example: "2020-11-06 23:00"
        is_confirmed:
          type: boolean
          description: Is used to confirm if the customer acctualy went in the restaurant
          example: True
       
    Table:
      description: The restaurant's table model
      required:
        - id
        - restaurant_id
        - capacity
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 123
        restaurant_id:
          type: integer
          description: Restaurant's Unique Identifier
          example: 123
        capacity:
          type: integer
          description: The table max capacity
          minimum: 1
          maximum: 15
          example: 6
    
    RestaurantAvailability:
      description: The restaurant opening time model
      required:
        - id
        - start_time
        - end_time
        - day
        - restaurant_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 123
        start_time:
          type: string
          description: The opening time start time (hour)
          example: "09:00" # TODO: check if this includes seconds
        end_time:
          type: string
          description: The opening time end time (hour)
          example: "12:00" # TODO: check if this includes seconds
        day:
          type: string
          description: The opening time week day
          pattern: '(Mon|Tues|Wednes|Thurs|Fri|Satur|Sun)day'
          example: "Tuesday"
        restaurant_id:
          type: integer
          description: Restaurant's Unique Identifier
          example: 123
    
    Response:
      description: Standard json response template
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          example: 'Success'
        message:
          type: string
          example: 'Reservation successfully added'
